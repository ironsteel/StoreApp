/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StoreView.java
 *
 * Created on Mar 3, 2012, 7:01:42 PM
 */
package storeapp;

import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import org.jdesktop.application.Action;
import storeapp.entity.CustomOrder;
import storeapp.entity.Product;
import storeapp.session.UserSessionManager;
import storeapp.tablemodels.OrderModel;
import storeapp.tablemodels.OrdersTableModel;
import storeapp.tablemodels.ProductsTableModel;

/**
 *
 * @author dalev
 */
public class StoreView extends javax.swing.JFrame {

    private static final String APP_NAME = "StoreApp";
    public static final String PRODUCT_TABLE_TITLE = "Product";
    private String SELLER_CRUD_TAB_TITLE = "Seller";
    public static final int READ_ONLY_PRODUCTS_TABLE_INDEX = 1;


    private EntityManager entityManager = Persistence.createEntityManagerFactory("storedbPU").createEntityManager();
    private LoginDialog loginDialog;
    private AddEdit addEdit;
    private List<CustomOrder> orders;
    private List<Product> allProducts;
    private OrdersTableModel ordersTableModel = new OrdersTableModel();
    private ProductsTableModel productsTableModel = new ProductsTableModel();
    private ProductCrudTable productCrud;
    private SellerCrudTable sellerCrud;

    /** Creates new form StoreView */
    public StoreView() {
        initComponents();
        setTitle(APP_NAME);
        loginDialog = new LoginDialog(this, true);
        loginDialog.addComponentListener(new ComponentAdapter() {

            @Override
            public void componentHidden(ComponentEvent e) {
                fetchCustomerOrdersBySellerId();
                fetchAllProducts();

                boolean isManager = UserSessionManager.getSingleton().isCurrentUserManager();
                if (isManager) {
                    tabPanel.removeTabAt(READ_ONLY_PRODUCTS_TABLE_INDEX);
                    tabPanel.addTab(PRODUCT_TABLE_TITLE, productCrud);
                    tabPanel.addTab(SELLER_CRUD_TAB_TITLE, sellerCrud);
                }
            }
        });

        loginDialog.setEnityManager(entityManager);
        loginDialog.setVisible(true);
        addEdit = new AddEdit(this, true);
        productCrud = new ProductCrudTable();
        sellerCrud = new SellerCrudTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPanel = new javax.swing.JTabbedPane();
        ordersTablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        addOrderButton = new javax.swing.JButton();
        editOrderButton = new javax.swing.JButton();
        removeOrderButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        productsTablePanel = new javax.swing.JScrollPane();
        productsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        tabPanel.setName("tabPanel"); // NOI18N

        ordersTablePanel.setName("ordersTablePanel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        orderTable.setName("orderTable"); // NOI18N
        jScrollPane1.setViewportView(orderTable);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(storeapp.StoreApp.class).getContext().getResourceMap(StoreView.class);
        addOrderButton.setText(resourceMap.getString("addOrderButton.text")); // NOI18N
        addOrderButton.setName("addOrderButton"); // NOI18N

        editOrderButton.setText(resourceMap.getString("editOrderButton.text")); // NOI18N
        editOrderButton.setName("editOrderButton"); // NOI18N

        removeOrderButton.setText(resourceMap.getString("removeOrderButton.text")); // NOI18N
        removeOrderButton.setName("removeOrderButton"); // NOI18N

        javax.swing.GroupLayout ordersTablePanelLayout = new javax.swing.GroupLayout(ordersTablePanel);
        ordersTablePanel.setLayout(ordersTablePanelLayout);
        ordersTablePanelLayout.setHorizontalGroup(
            ordersTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ordersTablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ordersTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addGroup(ordersTablePanelLayout.createSequentialGroup()
                        .addComponent(addOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeOrderButton)))
                .addContainerGap())
        );
        ordersTablePanelLayout.setVerticalGroup(
            ordersTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ordersTablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ordersTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addOrderButton)
                    .addComponent(editOrderButton)
                    .addComponent(removeOrderButton)))
        );

        tabPanel.addTab(resourceMap.getString("ordersTablePanel.TabConstraints.tabTitle"), ordersTablePanel); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        productsTablePanel.setName("productsTablePanel"); // NOI18N

        productsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        productsTable.setName("productsTable"); // NOI18N
        productsTablePanel.setViewportView(productsTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productsTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productsTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        tabPanel.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new StoreView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addOrderButton;
    private javax.swing.JButton editOrderButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderTable;
    private javax.swing.JPanel ordersTablePanel;
    private javax.swing.JTable productsTable;
    private javax.swing.JScrollPane productsTablePanel;
    private javax.swing.JButton removeOrderButton;
    private javax.swing.JTabbedPane tabPanel;
    // End of variables declaration//GEN-END:variables

    private void fetchCustomerOrdersBySellerId() {
        int userId = UserSessionManager.getSingleton().getUserId();
        orders = entityManager.createNamedQuery(CustomOrder.orderDetails).setParameter("userID", userId).getResultList();
        for (CustomOrder o : orders) {
            ordersTableModel.add(new OrderModel(o.getCustomOrderId(), o.getCustomer().getNameCustomer(), 3.f));
        }

        orderTable.setModel(ordersTableModel);

    }

    public void fetchAllProducts() {
        allProducts = entityManager.createNamedQuery(Product.getAll).getResultList();

        for (Product p : allProducts) {
            productsTableModel.add(p);
        }

        productsTable.setModel(productsTableModel);
        productsTable.setAutoCreateRowSorter(true);
    }

    @Action
    public void addEdit() {
        if (orderTable.getSelectedRowCount() != 0) {
            addEdit.setCustomOrderIdForEdit(orders.get(orderTable.getSelectedRow()).getCustomOrderId());
        }
        addEdit.setVisible(true);
    }
}
